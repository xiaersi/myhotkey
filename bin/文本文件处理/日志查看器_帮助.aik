
;;---首页帮助----------------------------------------------------------------
【首页帮助】:
var_help =
(

  欢迎使用 “日志查看器” ！
--------------------------------------


@使用步骤@

1、首先通过【打开】按钮，打开一个文本文件；
2、在“过滤条件”选项卡中，可以过滤和查找内容；
3、数据经过过滤之后，可以根据指定的规则取得变量值，显示包含变量最大或最小值的行；
4、如果有更复杂的需求，进入“表达式”选项卡，这里可以设置多个变量以及更复杂的表达式；



@选项卡说明@

1、首页：加载、保存、维护数据；
2、过滤条件：过滤、查找数据；
3、求最值：指定变量格式，查找包含变量最大或最小值的行；
           需要加载了文本数据后，才能求最值。
4、表达式：可指定多个变量的格式，指定复杂的表达式，
           查找并显示使得表达式成立的所有数据；
           查找并显示使表达式最大或最小值的相关数据；
           需要加载并过滤了数据之后，方可操作。
5、计算器：自由的数学计算器，支持常用数学函数、关系运算、逻辑运算！
6、配置：  可以设置每页显示多少行；可以将过滤条件、求最值、表达式相关的参数进行保存与加载。
7、帮助：  可从这里找到所有的帮助内容.



@首页中的按钮说明@

【打开】：打开和加载一个文本文件，打开之前会清空以前的内容。
          打开文件也可以通过将文本文件拖放到正文的文本显示框来实现。
          
【追加文件】：打开一个文本文件，将其内容追加到当前内容的后面。
          也可以拖动多个文本文件到“文件列表”的列表框中，一次性追加多个文件文件。
          在设置了过滤条件时，追加文本内容之前会过滤掉满足过滤条件的数据。
          
【另存为】：将日志显示框内的内容保保存为文本文件。
          
【原始内容】：显示从文件中加载的原始数据。

【过滤内容】：显示经过过滤处理后的数据。

【清空内容】：清空原始数据和过滤之后的内容。
          

--------------------------------------
  更多帮助，请点击“帮助”选项卡！
  
  
  
)	
GuiControl, Text, _MyEdit, %var_help%
return
	
;;---过滤条件帮助------------------------------------------------------------
【过滤条件帮助】:
var_help =
(


//___@ 过滤条件帮助 @____________________________________________________

  “过滤条件”选项卡内，可以设置查找条件与过滤条件。
  
  在“要保留的内容”编辑框中输入查找条件，一行为一个条件；
  在“要过滤的内容”编辑框中输入要过滤的条件，一行为一个条件。
  
  之后可以按【<查找】按钮执行查找任务，按【过滤>】执行过滤任务，按【<同时>】查找并过滤。

   【<查找】按钮执行结果：将原始数据中，包含了任意一条查找条件的记录显示出来，并存入缓存；
   
   【过滤>】按钮执行结果：将包含了任意一条查找条件的记录过滤掉，其余的显示出来并存入缓存；
   
   【<同时>】功能相当于同时执行查找和过滤功能，将满足查找条件以及不满足过滤条件的记录显示
            出来并存入缓存。当一条记录同时满足查找条件和过滤条件时，不会被过滤掉。
            
   【还原】按钮与“首页”选项卡中的【原始内容】按钮功能一致，显示从文件加载的原始数据。
   
   通过【<查找】、【过滤>】、【<同时>】操作得到的缓存数据，是“求最值”、“表达式”的前提。
   
)
GuiControl, Text, _MyEdit, %var_help%
return

;;---求最值帮助--------------------------------------------------------------
【求最值帮助】:
var_help =
(

//___@ 求最值帮助 @______________________________________________________

  在加载文本文件后，可以在“求最值”选项卡中指定变量格式，以及保留及过滤条件。
按下【查找最大值】或【查找最小值】按钮之后，程序会查找出所有满足格式与条件的变量，
并将包含变量最大值或最小值的那一行显示出来！


//___@ 使用原始数据 @____________________________________________________

  “使用原始数据”复选框，用于指定数据来源。
勾选了“使用原始数据”复选框之后，将在从文件中加载的原始数据中查找变量；
否则将从经过过滤处理之后的数据中查找变量。


//___@ 举例 @____________________________________________________________

  假设某个日志文件中有以下数据：
[2010-08-23 11:29:42 ] :  58328927  :-( 转换失败！ 原因是：Read0044() 失败文件超过10000k，跳过转换！
[2010-08-23 11:29:59 ] :  58328932  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
[2010-08-23 17:04:51 ] :  58323252  :-( 转换失败！ 原因是：转换错误信息，无法打开要转换的PDF源文件
[2010-08-23 10:01:42 ] :  58321836  转换成功.
[2010-08-23 10:01:45 ] :  58321863  转换成功.
[2010-08-23 10:02:32 ] :  58321906  :-( 转换失败！ 原因是：文件类型被过滤掉，无需转换
[2010-08-23 10:02:32 ] :  58321910  :-( 转换失败！ 原因是：文件类型被过滤掉，无需转换
[2010-08-23 11:26:10 ] :  58328828  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
[2010-08-23 11:26:13 ] :  58328829  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
  
  分析上面的日志，一行为一条记录，在转换失败的记录中有相同的格式：“[时间]: 数字变量 :-( 转换失败！ ...”
  
  而数字变量才是我们关心的内容，现在我想找到数字变量最大值的那一行，具体做法如下：
  
  1、加载文本文件
  
  2、在“过滤条件”选项卡中的“要过滤的内容”框中，填入“转换成功”，
     然后按下【过滤>】过滤掉包含“转换成功”字样的行！
     
  3、进入“求最值”选项卡，在“变量左边字符”的编辑框中填入“ ] :  ”；
     在“变量右边字符”的编辑框中填入“  :-( 转换失败！”；
     
  4、【查找最大值】将显示：[2010-08-23 11:29:59 ] :  58328932  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
     【查找最小值】将显示：[2010-08-23 10:02:32 ] :  58321906  :-( 转换失败！ 原因是：文件类型被过滤掉，无需转换
     
  5、如果仅想在包含“原因是：转换错误信息，PDF 中没有找到文本”的行中查找变量，
     那么需要指定“包含条件”与“过滤条件”的内容，例如：
     “包含条件”："PDF 中没有找到文本"
     “过滤条件”："无需转换|跳过转换"
     
    此时，求最值的结果发生变化：
    【查找最大值】将显示：[2010-08-23 11:29:59 ] :  58328932  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
    【查找最小值】将显示：[2010-08-23 11:26:10 ] :  58328828  :-( 转换失败！ 原因是：转换错误信息，PDF 中没有找到文本 
  	
//___@ 注意 @____________________________________________________________

  1、在使用求最值功能之前，需要先加载文本文件。
  
  2、在没有勾选“使用原始数据”复选框的情况下，还需要在“过滤条件”选项卡中，
     设置过滤条件并进行过滤处理之后，方可使用求最值功能。
     
  3、当有多个包含条件或过滤条件时，用|进行分隔。
  	
  	
  
)
GuiControl, Text, _MyEdit, %var_help%
return

;;---表达式帮助--------------------------------------------------------------
【表达式帮助】:
var_help =
(

//___@ 表达式作用 @______________________________________________________
  
  由程序记录的日志，一般具有循环性，比如一次操作记录一批记录，
再一次重复操作，又记录一批数据。“表达式”选项卡的作用在于，根据
给定的表达式，列出满足表达式的那一批或多批数据。


//___@ 使用步骤 @________________________________________________________
  
  1、指定一次操作的第一条记录，即循环的开始；
  2、设定一个循环内的一些变量；
  3、使用这些变量构成一个表达式；
  4、按下按钮查找数据：
    【表达式】按钮将查找满足表达式的所有批次的记录；
    【最大值】按钮查找出使得表达式的值最大的那一批记录；
    【最小值】按钮查找出使得表达式的值最小的那一批记录；

	
//___@ 举例 @____________________________________________________________

  假设某个程序产生了以下日志：
  x[12]
  y(34)
  z{36}
  x[6]
  y(89)
  z{456}
  x[182]
  y(334)
  z{306}
  分析日志我们可以发现，数据以x[...]、y(...)、z{...}循环的，循环以x[...]开始。
  
  现在我们想找出 x + y + z 值最大的那批记录，操作步骤如下：
  
  1、加载文本文件
  
  2、设定过滤条件，进行过滤操作。（当没有需要过滤的内容时，随便设定一个不存在的过滤内容进行过滤）
  
  3、进入“表达式”选项卡，在“开始条件”编辑框中输入“x[”
  
  4、根据x,y,z三个变量的格式（参考求最值的变量设置格式），例如按下面的格式填写变量列表（ListView）
  
     变量名 | 左边字符 | 右边字符 | 保留条件 | 过滤条件
     $x     | [        | ]        |          | 			
     $y     | (        | )        |          | 			
     $z     | {        | }        |          | 			
     
  5、根据变量名，设定表达式，在表达式编辑框中输入：“ $x + $y + $z”
     
  6、按【最大值】按钮查找使得 $x + $y + $z 的值为最大的那一批记录，结果为：
		x[182]
		y(334)
		z{306}

     按【最小值】查找到的结果为：
		x[12]
		y(34)
		z{36}
  
  7、再写一个复杂一些的表达式：“$z > $y && sin2( $x ) > 0”
    按【表达式】按钮将查找使得 z > y 并且 sin( x 度 ) > 0 成立的多批次记录，结果为：

	-----------------------------------
	  x[12]
	  y(34)
	  z{36}

	-----------------------------------
	  x[6]
	  y(89)
	  z{456}    
	  
//___@ 注意 @____________________________________________________________	  

  1、进行表达式操作之前，请先加载文本文件数据，并且进行过滤操作。
  
  2、设定变量时，变量名应该以$开始。



)
GuiControl, Text, _MyEdit, %var_help%
return

;;---简介--------------------------------------------------------------------
【简介】:
var_help =
(


  您选择使用日志查看器，令我十分的高兴，说明我的这份努力是有价值的！
  
  
  日志查看器采用 AutoHotkey 脚本程序编写，目的在于帮助用户查看分析日志文件，从而找出问题所在。

  日志查看器可以同时加载多个文本文件，可以过滤掉不关心的内容，也可以轻松地从浩瀚的日志记录中搜索出重要的内容。

  此外，正确地指定格式后，可以从日志中识别数字，并且比较数字，将包含最大或最小数字的行找出来。

  你也可以将不同格式的数字设置成不同的变量，用这些变量构成一个表达式，然后查找出使表达式成立的多批记录，或者查找到使表达式的值最大或最小的那一批记录。

  

)
GuiControl, Text, _MyEdit, %var_help%
return

;;---计算器帮助--------------------------------------------------------------
【计算器帮助】:
var_help =
(

//___@ 计算器说明 @______________________________________________________

  计算器与日志查询并无关系，但它是实现“表达式”功能的副产品，对于分析日志的人员
或许会有帮助，因此将其添加到了日志查看器中。


//___@ 特点 @____________________________________________________________
  
  与其他计算器不同的是，本计算器以行为单位进行计算，可以计算多行，可以使用变量，
支持关系运算、逻辑运算，支持以下数学函数的使用：sqrt,abs,log,ln,mod,round,
sin,cos,tan,asin,acos,atan,ceil,exp,floor,sin2,cos2,tan2


//___@ 使用方法 @________________________________________________________

  1、在“计算器”选项卡内的编辑框内输入要计算的内容
  
  2、按【计算】按钮，程序将各行的结果显示到下方的日志显示框内。
  
  例如输入： log( 128 * 2 - ( 30 + 23 ) )
  【计算】之后，下方的显示框将显示结果：2.307496

  3、举例使用变量和多行的计算，先输入：
		$x = 12
		$y = -3
		$a = sqrt( $x**2 + $y**2 )
		$z = 5
		$c = $a * $z / 2
		$d = atan( $c )
		$z > $d && $x + $y < 10
     
     【计算】结果为：
		$x  = 12
		$y  =  -3
		$a  = 12.369317
		$z  = 5
		$c  = 30.923292
		$d  = 1.538470
		1

//___@ 注意事项 @________________________________________________________

   1、支持 +-*/ 以及乘方（**）数学运算；
      支持 >=、>、 <=、 <、 != 、= 关系运算；
      支持 &&、|| 逻辑运算；
      支持使用括弧()，但不支持[]和{}的使用；
      支持常用函数的使用。
   
   2、使用变量时，变量名应当由字母、数字、_、$构成，且以$开头，
      中间不能有空格、运算符号等其他符号。
      建议变量名以$开始，防止用户变量名与程序变量名相同而造成错误。
   
   3、给变量赋值时用 “变量名 = 表达式” 的格式，如果变量名违反了规则，
      则将其视为 = 关系运算， 如果  a + b = c + d 中，a + b 不能作为一个变量名，
      因此将 a + b = c + d 视为一个表达式。
      
   4、使用函数时，函数名后就紧跟()，之间不可有空格。
      如 sin  ( 30 ) 是不正确的，应当写成 sin( 30 )
      
   5、sin,cos,tan 三角函数的参数的单位是以弧度；
      sin2,cos2,tan2 的参数的单位是角度。
      
   6、关系运算与逻辑运算的结果：1（真） 0（假）




)
GuiControl, Text, _MyEdit, %var_help%
return

;;---配置帮助----------------------------------------------------------------
【配置帮助】:
var_help =
(

//___@ 配置选项卡 @______________________________________________________

  “配置选项卡”对日志查看器进配置管理，可以设置日志显示框每页显示行数(默认100行)，
可以保存当前的配置，或者加载以前保存过的配置。



//___按钮说明____________________________________________________________

【加载配置】：将选中的配置，分解并填充到过滤条件、求最值、表达式等选项卡。

【保存配置】：将当前配置保存到配置文件中，这些配置包括：
          “过滤条件”选项卡中要保留的内容与要过滤的内容；
          “求最值”选项卡中的设置；
          “表达式”选项卡中的设置；
          
【刷新配置】：从配置文件中重新加载并显示历史配置。

【删除配置】：从配置文件中，删除当前选中的配置。



)
GuiControl, Text, _MyEdit, %var_help%
return          