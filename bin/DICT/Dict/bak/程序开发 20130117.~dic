[Com组件]
IDispatch接口原理与应用=http://blog.csdn.net/sheismylife/article/details/463031
[C++ Builder]
HTML与BCB之间通过Active控件实现交互=http://blog.sina.com.cn/s/blog_555305900100d99s.html
函数指针(全局函数/类成员函数)和函数对象=http://www.ccrun.com/article.asp?i=1005&d=sc37og
[JavaScript]
事件列表=onclick /* IE3、N2 鼠标点击时触发此事件 */|ondblclick /* IE4、N4 鼠标双击时触发此事件 */|onmousedown /* IE4、N4 按下鼠标时触发此事件 */|onmouseup /* IE4、N4 鼠标按下后松开鼠标时触发此事件 */|onmouseover /* IE3、N2 当鼠标移动到某对象范围的上方时触发此事件 */|onmousemove /* IE4、N4 鼠标移动时触发此事件 */|onmouseout /* IE4、N3 当鼠标离开某对象范围时触发此事件 */|onkeypress /* IE4、N4 当键盘上的某个键被按下并且释放时触发此事件. */|onkeydown /* IE4、N4 当键盘上某个按键被按下时触发此事件 */|onkeyup /* IE4、N4 当键盘上某个按键被按放开时触发此事件 */|onabort /* IE4、N3 图片在下载时被用户中断 */|onbeforeunload /* IE4、N 当前页面的内容将要被改变时触发此事件 */|onerror /* IE4、N3 出现错误时触发此事件 */|onload /* IE3、N2 页面内容完成时触发此事件 */|onmove /* IE、N4 浏览器的窗口被移动时触发此事件 */|onresize /* IE4、N4 当浏览器的窗口大小被改变时触发此事件 */|onscroll /* IE4、N 浏览器的滚动条位置发生变化时触发此事件 */|onstop /* IE5、N 浏览器的停止按钮被按下时触发此事件或者正在下载的文件被中断 */|onunload /* IE3、N2 当前页面将被改变时触发此事件 */|onblur /* IE3、N2 当前元素失去焦点时触发此事件 */|onchange /* IE3、N2 当前元素失去焦点并且元素的内容发生改变而触发此事件 */|onfocus /* IE3 、N2 当某个元素获得焦点时触发此事件 */|onreset /* IE4 、N3 当表单中RESET的属性被激发时触发此事件 */|onsubmit /* IE3 、N2 一个表单被递交时触发此事件 */|onbounce /* IE4、N 在Marquee内的内容移动至Marquee显示范围之外时触发此事件 */|onfinish /* IE4、N 当Marquee元素完成需要显示的内容后触发此事件 */|onstart /* IE4、 N 当Marquee元素开始显示内容时触发此事件 */|onbeforecopy /* IE5、N 当页面当前的被选择内容将要复制到浏览者系统的剪贴板前触发此事件 */|onbeforecut /* IE5、 N 当页面中的一部分或者全部的内容将被移离当前页面[剪贴]并移动到浏览者的系统剪贴板时触发此事件 */|onbeforeeditfocus /* IE5、N 当前元素将要进入编辑状态 */|onbeforepaste /* IE5、 N 内容将要从浏览者的系统剪贴板传送[粘贴]到页面中时触发此事件 */|onbeforeupdate /* IE5、 N 当浏览者粘贴系统剪贴板中的内容时通知目标对象 */|oncontextmenu /* IE5、N 当浏览者按下鼠标右键出现菜单时或者通过键盘的按键触发页面菜单时触发的事件 */|oncopy /* IE5、N 当页面当前的被选择内容被复制后触发此事件 */|oncut /* IE5、N 当页面当前的被选择内容被剪切时触发此事件 */|ondrag /* IE5、N 当某个对象被拖动时触发此事件 [活动事件] */|ondragdrop /* IE、N4 一个外部对象被鼠标拖进当前窗口或者帧 */|ondragend /* IE5、N 当鼠标拖动结束时触发此事件，即鼠标的按钮被释放了 */|ondragenter /* IE5、N 当对象被鼠标拖动的对象进入其容器范围内时触发此事件 */|ondragleave /* IE5、N 当对象被鼠标拖动的对象离开其容器范围内时触发此事件 */|ondragover /* IE5、N 当某被拖动的对象在另一对象容器范围内拖动时触发此事件 */|ondragstart /* IE4、N 当某对象将被拖动时触发此事件 */|ondrop /* IE5、N 在一个拖动过程中，释放鼠标键时触发此事件 */|onlosecapture /* IE5、N 当元素失去鼠标移动所形成的选择焦点时触发此事件 */|onpaste /* IE5、N 当内容被粘贴时触发此事件 */|onselect /* IE4、N 当文本内容被选择时的事件 */|onselectstart /* IE4、N 当文本内容选择将开始发生时触发的事件 */|onafterupdate /* IE4、N 当数据完成由数据源到对象的传送时触发此事件 */|oncellchange /* IE5、N 当数据来源发生变化时 */|ondataavailable /* IE4、N 当数据接收完成时触发事件 */|ondatasetchanged /* IE4、N 数据在数据源发生变化时触发的事件 */|ondatasetcomplete /* IE4、N 当来子数据源的全部有效数据读取完毕时触发此事件 */|onerrorupdate /* IE4、N 当使用onBeforeUpdate事件触发取消了数据传送时，代替onAfterUpdate事件 */|onrowenter /* IE5、N 当前数据源的数据发生变化并且有新的有效数据时触发的事件 */|onrowexit /* IE5、N 当前数据源的数据将要发生变化时触发的事件 */|onrowsdelete /* IE5、N 当前数据记录将被删除时触发此事件 */|onrowsinserted /* IE5、N 当前数据源将要插入新数据记录时触发此事件 */|onafterprint /* IE5、N 当文档被打印后触发此事件 */|onbeforeprint /* IE5、N 当文档即将打印时触发此事件 */|onfilterchange /* IE4、N 当某个对象的滤镜效果发生变化时触发的事件 */|onhelp /* IE4、N 当浏览者按下F1或者浏览器的帮助选择时触发此事件 */|onpropertychange /* IE5、N 当对象的属性之一发生变化时触发此事件 */|onreadystatechange /* IE4、N 当对象的初始化属性值发生变化时触发此事件 */
[词汇]
Affordability=可负担性
Acquistion=软件购置
Evolution=发展
Extensibility=可扩展性
Flexibility=灵活性
Portability=可移植性
Efficiency=效率
Predictability=可预测性
Reliability=可靠性
Scalability=可伸缩性
Connection Mangement=连接管理
Service Initialization=服务初始化
Distribution=分布
Concurrency Control=并发控制
Flow Control=流控制
Error Handing=错误处理|错误 处理
Event Loop Integration=事件循环集成
Dependability=可靠性
Design pattern=设计模式
Communicating Elements=组成要素
Architectural Pattern=架构型模式|表示软件系统的基础性的、总体的结构组织，|并且提供一组预定义系统，规定它们责任，|并为它们之间的关系提供指导
Pattern Language=模式语言|为谈论软件开发问题定义词汇表，并且提供有序地解决这些问题的方法步骤
MIC模型集成式计算=是一种新兴的开发范式，它使用针对特定领域的建模语言来系统地设计软件，范围从小型的实时嵌入式系统直至大型的企业应用。
ACE=Adaptive Communication Environment（自适配通信环境）|http://www.cs.wustl.edu/~schmidt/ACE.html /*官网*/
Preprocessing=预处理
Compilation=编译
Assembly=汇编
Linking=链接
[C++知识]
explicit=explicit   只对构造函数起作用，用来抑制隐式转换。|http://www.cnblogs.com/cutepig/archive/2009/01/14/1375917.html /*摘自*/
VC使用UpdateData更新控件数据=UpdateData(false)     将你所更改的数据传给控件变量，然后显示在控件中 |UpdateData(true)       将程序运行时在界面获控件得的新数值传给控件变量
[设计模式]
创建型模式=Singleton模式：解决实体对象个数的问题。其他创建型模式都是解决new所带来的耦合关系。|Factory Method, Abstract Factory, Builder 都需要一个额外的工厂类负责实例化“易变对象”。|而Prototype则是通过原型（一个特殊的工厂类）来克隆“易变对象”。
设计模式总结=http://www.cnblogs.com/vrliym/articles/2287019.html /*很详细，包含各模式的优缺点以及应用情景*/|http://wenku.baidu.com/view/1f8ee805a6c30c2259019e92.html  /*更详细的文库，还包含图示、代码*/
[很棒的开源项目]
SVN sendmessage=http://sendmessage.googlecode.com/svn/trunk/  /*可向任意窗口发送消息的小工具，由tortoise开发*/
AutoHotkey libraries=http://mm-autohotkey.googlecode.com/svn/trunk/  /*AutoHotkey及论坛维护的库*/
ahk MouseGesturel=http://code.google.com/p/mousegesturel/|很强大的鼠标手势工具，用AutoHotkey开发。
[嵌入式开发]
嵌入式爱好者论坛=http://bbs.witech.com.cn/forumdisplay.php?fid=8&page=1
[经验技巧]
VC2008自动格式化代码=Ctrl+K,F
