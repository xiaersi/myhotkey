;; 超级字符串，可带有选项的字符串，可执行的字符串
;; 例如 1R)d:\000\test.txt

#include .\inc\ShortcutMenu.aik
#include .\inc\Array.aik
#include .\inc\tip.aik

;; 将cmdString的选项与字符串进行分离，得到opt_ = 1R 和 返回字符串d:\000\test.txt
cmdStringSplit( cmdstr, byref opt_ )
{
	opt_ =
	if ( RegExMatch( cmdstr, "^[^(]*\)", var_opt ) > 0 )
	{
		len := strlen( var_opt )
		StringLeft, opt_, var_opt, len - 1
		StringMid, var_out, cmdstr, len + 1,
		return var_out
	}
	return cmdstr
}

;; cmdstr 是否飞扬命令串格式
IsCmdString( cmdstr )
{
	if ( RegExMatch( cmdstr, "^[^(]*\)", var_opt ) > 0 )
		return true
	return false
}

;; 在cmdString的opt选项列表中，查找指定的某个选项optname_
;; 查找失败返回 false，查找成功返回true
;; 举例：optlist_ = 1|send|tip:test)
;; FindCmdOpt( optlist_, "send" ) == 1
;; FindCmdOpt( optlist_, "tip:", var_temp ) == 1; var_temp = "test"
FindCmdOpt( optlist_, optname_, byref _optvalue_="NoReturn" )
{
	if optlist_ = 
		return false

	if optname_ =
	{
		return false
	}
	else ifinstring optname_, :
	{
		var_needle = i)(?<=%optname_%).*?(?=$|\)|\|)
		if RegExMatch( optlist_, var_needle, var_martch ) > 0
		{
			if _optvalue_ <> NoReturn
			{
				_optvalue_ := var_martch
			}
			return true
		}
	}
	else
	{
		if InStrList( optlist_, optname_, "|" ) > 0
			return true
	}
	return false
}

run_cmd( cmdstr_ )
{
	;; 先检查命令串是否有效
	if not IsValidCmd( cmdstr_ )
		return false

	bRet := false
	bNeedTip := true
	cmdstr := cmdStringSplit( cmdstr_, opt )

	if InStrList( opt, "0", "|" ) > 0
	{
		var_temp = %cmdstr% 已经设置无效！
		CmdStringTip( var_temp )
		return false
	}
	;; 如果需要复制选中的文件，则选中之
	if InStrList( opt, "clip", "|" ) > 0
	{
		var_clip := cliptext("", true)
	}	

	;; 如果要求激活某个窗口WinActivate
	if RegExMatch( opt, "i)(?<=WinActivate:).*?(?=$|\)|\|)", var_martch ) > 0
	{
        IfWinNotActive %var_martch% 
		{
			WinActivate  %var_martch% 
			WinWaitActive  %var_martch%, , 5
		}
		IfWinNotActive %var_martch% 
			return false
	}		

	;; 如果需要Sleep
	if RegExMatch( opt, "i)(?<=sleep:).*?(?=$|\)|\|)", var_sleep ) > 0
	{
		if var_sleep is integer
		{
			tooltip Sleep %var_sleep%
			Sleep %var_sleep%
			tooltip
		}
	}	
	
	if InStrList( opt, "send", "|" ) > 0
	{
		Send %cmdstr%
		bRet := true
	}
	else if InStrList( opt, "sendByClip", "|" ) > 0
	{
		var_oldclip := clipBoard 
		clipBoard := cmdstr 
		Send ^v
		clipBoard := var_oldclip
		bRet := true
	}	
	else if InStrList( opt, "gosub", "|" ) > 0
	{
		if IsLabel( cmdstr )
		{
			Gosub %cmdstr%
			bRet := true
		}
		else
		{
			tooltip3( "功能模块 " . cmdstr . " 不存在" )
			bRet := false
		}
	}
	else if InStrList( opt, "menu", "|" ) > 0
	{
		bNeedTip := false
		CreateMenuByIni( cmdstr, "A" )
	}
	else if InStrList( opt, "run", "|" ) > 0
	{
		ifInstring cmdstr, $clip$
	 	{
			if var_clip =
				var_clip = %clipboard%
			StringReplace, cmdstr, cmdstr, $clip$, %var_clip%
		}
		run %cmdstr%
	}
	else if InStrList( opt, "func", "|" ) > 0
	{
		if StrSplit2Sub( cmdstr, "(", funcName, paramArray )
		{
			StringGetPos, var_pos, paramArray, ) , R
			if Not ErrorLevel 
				StringLeft paramArray, paramArray, var_pos

			;; 如果参数中有$input$字样，则通过inputbox窗口输入值
			StringSplit PA, paramArray, `,
			;msgbox paramArray = %paramArray%`nPA2 = %PA2%
			loop %PA0%
			{
				ifInString PA%a_index%, $input$
				{
					var_temp   = 请输入第 %a_index% 个变量值：
					var_input := myinput( "请输入变量", var_temp, "" )
					StringReplace, PA%a_index%, PA%a_index%, $input$, %var_input%
				}
				;; 如果有$clip$字样，则用剪贴板中的内容替换之
				else ifInstring PA%a_index%, $clip$
				{
					if var_clip =
						var_clip = %clipboard%
				;;PA%a_index% := RegexReplace( PA%a_index%, "\$clip\$", var_clip )
					StringReplace, PA%a_index%, PA%a_index%, $clip$, %var_clip%
				}				
				/*
				else ifinstring PA%a_index%, `"
				{
					StrTrim( PA%a_index%, "`"" )
				}
				*/
			}
			;; 根据参数的个数，调用函数，最多能执行11个参数
			if PA0 <= 0
				%funcName%()
			else if PA0 = 1
				%funcName%( PA1 )
			else if PA0 = 2
				%funcName%( PA1, PA2 )
			else if PA0 = 3
				%funcName%( PA1, PA2, PA3 )
			else if PA0 = 4
				%funcName%( PA1, PA2, PA3, PA4 )
			else if PA0 = 5
				%funcName%( PA1, PA2, PA3, PA4, PA5 )
			else if PA0 = 6
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6 )
			else if PA0 = 7
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6, PA7 )
			else if PA0 = 8
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6, PA7, PA8 )
			else if PA0 = 9
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6, PA7, PA8, PA9 )
			else if PA0 = 10
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6, PA7, PA8, PA9, PA10 )
			else if PA0 = 11
				%funcName%( PA1, PA2, PA3, PA4, PA5, PA6, PA7, PA8, PA9, PA10, PA11 )
			else 
			{
				bNeedTip := false
				var_tip = 函数 %funcName% 执行失败！
				CmdStringTip( var_tip )
			}
		}
		else 
		{
			%funcName%()
		}
	}
	else if RegExMatch( opt, "i)(?<=runby:).*?(?=$|\)|\|)", var_file ) > 0
	{
		ifexist %var_file% 
		{
			;; 如果文件名中包含空格，则为var_file添加引号
			if RegExMatch( var_file, "\S\s+\S" ) > 0
			{
				var_file = `"%var_file%`"
			}		
			;; 如果是相对根目录的相对路径，则转化为绝对路径
			cmdstr := GetRealPath( cmdstr )
			run %var_file% `"%cmdstr%`"
		}
	;	else	 msgbox ...
	}
	else if RegExMatch( opt, "i)(?<=launchy:).*?(?=$|\)|\|)", var_keyname ) > 0
	{
		var_read := read_ini( "launchy.ini", "file", var_keyname, "" )
		if var_read <>
		{
			;; var_file 可能的值为： abc.exe|exe|c:\work
			loop parse, var_read, |
			{
				if a_loopfield <>
				{
					var_file := a_loopfield

					ifExist %var_file%
					{
						;; 如果文件名中包含空格，则为var_file添加引号
						if RegExMatch( var_file, "\S\s+\S" ) > 0
						{
							var_file = `"%var_file%`"
						}
						
						;; 如果是相对根目录的相对路径，则转化为绝对路径
						cmdstr := GetRealPath( cmdstr )
						msgbox %var_file% `"%cmdstr%`"
						run %var_file% `"%cmdstr%`"
					}
				}
				break
			}
		}
	}
	
	if ( bNeedTip && RegExMatch( opt, "i)(?<=tip\:).*?(?=$|\)|\|)", var_tip ) > 0 )
	{
		if not RegExMatch( opt, "i)(?<=tiptime\:).*?(?=$|\)|\|)", var_tiptime ) > 0
			var_tiptime := 400

		CmdStringTip( var_tip, var_tiptime)
	}
	return bRet
}

GetCmdTip( cmdstr_ )
{
	cmdstr := cmdStringSplit( cmdstr_, opt )
	if RegExMatch( opt, "i)(?<=tip:).*?(?=$|\)|\|)", var_tip ) > 0
	{
		return var_tip
	}
}

IsValidCmd( cmdstr_ )
{
	bRet := true
	cmdstr := cmdStringSplit( cmdstr_, opt )
	if InStrList( opt, "0", "|" ) > 0
	{
		return false
	}

	if ( InStrList( opt, "send", "|" ) > 0 || InStrList( opt, "sendByClip", "|" ) > 0 )
	{
		if cmdstr =
			return false
	}
	else if InStrList( opt, "gosub", "|" ) > 0
	{
		if not IsLabel( cmdstr )
			return false
	}
	else if InStrList( opt, "menu", "|" ) > 0
	{

		ifNotExist ShortcutMenu.ini
			InitShortcutMenuIniFile()

		iniMenumem := IniFileRead( "ShortcutMenu.ini" )
		if SecArrayFromIniMem( iniMenumem, cmdstr, "TempArray" ) = 0
			return false
	}
	
	if RegExMatch( opt, "i)(?<=IfExist:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		ifExist %var_martch%
			bRet := true
		else
			return false
	}
	if RegExMatch( opt, "i)(?<=IfWinActive:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		IfWinActive %var_martch%
			bRet := true
		else
			return false
	}	
	if RegExMatch( opt, "i)(?<=IfWinNotActive:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		IfWinNotActive %var_martch%
			bRet := true
		else
			return false
	}	
	if RegExMatch( opt, "i)(?<=IfWinExist:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		IfWinExist %var_martch%
			bRet := true
		else
			return false
	}		
	if RegExMatch( opt, "i)(?<=WinActivate:).*?(?=$|\)|\|)", var_martch ) > 0
	{
        IfWinExist %var_martch%         ;; 如果要求WinActivate某个窗口，则该窗口必须存在
			bRet := true
		else
			return false
	}		
	if RegExMatch( opt, "i)(?<=IfWinNotExist:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		IfWinNotExist %var_martch%
			bRet := true
		else
			return false
	}			
	if RegExMatch( opt, "i)(?<=runby:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		bRet := false
		ifexist %var_martch% 
			bRet := true
		else
			return false
	}
	else if RegExMatch( opt, "i)(?<=launchy:).*?(?=$|\)|\|)", var_martch ) > 0
	{
		var_read := read_ini( "launchy.ini", "file", var_martch, "" )
		if var_read <>
		{
			;; var_file 可能的值为： abc.exe|exe|c:\work
			loop parse, var_read, |
			{
				if a_loopfield <>
				{
					var_file := a_loopfield
					ifExist %var_file%
						bRet := true
					else
						return false
				}
				else
				{
					return false
				}
				break
			}
		}
		else
		{
			return false
		}
	}
	
	return true
}
