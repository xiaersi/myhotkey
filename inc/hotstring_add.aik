; hotstring_add.aik 和 hotstring_file.aik 的作用是快速为一段文字定义HotKey
; 并且自动将这个新的 HotString 写到指定的ahk 或 aik 文件中, 并且立刻生效
; 程序会自动检查HotString是否重复, 有重复则询问用户是否替换之
; 作者: 陈建平 

#include .\inc\common.aik
#include .\inc\CSmenu.aik
#include .\inc\hotstring_file.aik

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  下面的函数是用来将选中的内容定义为Hotstring的,功能强大
;;   clip2hs()	将选中的文字定义为HotString
;;	参数说明: 
;;	@hsfile :	将HotString添加到这个变量指定的文件中
;;	@hs_default: 	指定HotString中必须包含的文字,通常以;结尾
;;			当然,网址一般以/开头
;;	@pianyi:		指定光标偏移量,方便用户不用移动光标直接输入替代的单词即可
;;			默认值为3,即将光标停留在:R:后面,等待用户输入
;;	@var_hsType:	指定在HotString中是否用剪贴板,中文内容要使用,否则出现乱码
;;  	@Title_: 1:03 2009/7/27新增参数, 可以指定将Hotstring添加到指定的节, 如 #ifwinactive ahk_class EmEditorMainFrame3
;;  后面的几个函数由clip2hs()演化而来
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

clip2hs(hsfile, hs_default="`;",pianyi=0, var_hsType=1, Title_="")
{
	global g_DebugBox_AddHotString
	; Get the text currently selected. The clipboard is used instead of
	; "ControlGet Selected" because it works in a greater variety of editors
	; (namely word processors).  Save the current clipboard contents to be
	; restored later. Although this handles only plain text, it seems better
	; than nothing:

	AutoTrim Off  ; Retain any leading and trailing whitespace on the clipboard.
	ClipboardOld = %ClipboardAll%
	Clipboard =  ; Must start off blank for detection to work.

	;;------ 复制内容到剪贴板 ----------------------------------
	Send ^c

	ClipWait 1
	if ErrorLevel  ; ClipWait timed out.
	    return 0

	;------- 将`/回车/a_tab/;等特殊字符替换一下 ---------------------------------
	; Replace CRLF and/or LF with `n for use in a "send-raw" hotstring:
	; The same is done for any other characters that might otherwise
	; be a problem in raw mode:
	StringReplace, Hotstring, Clipboard, ``, ````, All  ; Do this replacement first to avoid interfering with the others below.
	StringReplace, Hotstring, Hotstring, `r`n,$rn$, All
	StringReplace, Hotstring, Hotstring, `r, $rn$, All
	StringReplace, Hotstring, Hotstring, `n, $rn$, All
	StringReplace, Hotstring, Hotstring, $rn$, ``r``n, All
	StringReplace, Hotstring, Hotstring, `%, ```%, All
	StringReplace, Hotstring, Hotstring, %A_Tab%, ``t, All
	StringReplace, Hotstring, Hotstring, `;, ```;, All

	Clipboard = %ClipboardOld%  ; Restore previous contents of clipboard.
	
	;------- 定时器的作用是, 弹出InputBox时, 自动将光标定位到输入关键字的地方 ---------------------------------
	SetTimer, __在指定HotSting关键字的窗口时自动定位光标, 10

	;------- 为InputBox准备默认值 ---------------------------------
	if (var_hsType=2)		; 添加程序
		var_default =:R:%hs_default%::`r`n`trun`,%Hotstring%`r`n`treturn `;}}}}}}}}}}}}`r`n
	else if (var_hsType=0)	; 直接添加英文
		var_default =:R:%hs_default%::%Hotstring%
	else if (var_hsType=3)	; 添加网址,同时增加英文网址和执行网址的程序
		var_default =:R:%hs_default%::%Hotstring%
	else					; 普通HotString, 将借助剪贴板输出中文
	{
		var_default = :R:%hs_default%::`t`;{/**/
		
		;; 如果字符串中有{inputbox},则表明这是一个变量,需要通过inputbox来输入
		
		if (CheckClipInputInString(Hotstring))	;; Hotstring 中包含了$clip$, $input$之类的字符, 并做了相应的替换
		{
			AddString(var_default, HotString, false)
		}
		else 
		{
			var_temp := "	varTemp = "
			AddString(var_temp, Hotstring, false)
			AddString(var_temp, "	sendbyclip(varTemp)", true)
			AddString(var_default, var_temp, true)
		}
		AddString(var_default, "	return `;}}}}}}}}}}}}`r`n", true)
	}
	;------- 为InputBox准备说明内容, prompt ---------------------------------
	var_promt = 添加HotString到%hsfile%`n节[%Title_%]`n`n请为您选中的内容设置一个Hotstring（英文单词）`n`n例如: :R:btw`::by the way
	
	;------- 弹出InputBox让用户为HotString指定关键字 ---------------------------------
	InputBox, varHotstring, 增加新的HotString, %var_promt%,,,,,,,,%var_default%
	if ErrorLevel  ; The user pressed Cancel.
	    return 0

	;------- 检查用户是否成功定义关键字 ---------------------------------
	IfInString, varHotstring, :R`:::
	{
	    MsgBox You didn't provide an abbreviation. The hotstring has not been added.
	    return 0
	}
	

	;------- 将新的HotString写入到指定文件, 并重新加载使之生效 ---------------------------------
	if (Title_="not_replace")
	{
		varHotstring = `r`n%varHotstring%
		FileAppend, %varHotstring%, %hsfile%  ; Put a `n at the beginning in case file lacks a blank line at its end.
	}
	else  ; 如果指定了节Title_, 则在添加HotString之前检查是否已经存在该热键, 存在则替换, 否则添加该热键
	{
		if (Title_ = "")
		{
			Title_ := "#ifwinactive"
		}
		HotKey_ := get_hotstring_key(varHotstring)
		if (HotKey_ = "")
		{
			msgbox clip2hs() :: 你想要添加的Hotkey为空, 不能添加
			return false
		}
		
		; 调用 replace_hkstring() 方法将新的HotString写入到指定文件中
		varHotstring = `r`n%varHotstring%
		var_result := replace_hkstring(hsfile, Title_, HotKey_, varHotstring)
		
		var_msg = replace_hkstring() = %var_result%
		AddString_LineInfo(ByRef var_msg, a_LineFile, a_ThisFunc, a_LineNumber)
		DebugBox(var_msg, "AddHotString", g_DebugBox_AddHotString)
		Return var_result
	}

	;------- 定时器的作用是, 弹出InputBox时, 自动将光标定位到输入关键字的地方 ---------------------------------
	__在指定HotSting关键字的窗口时自动定位光标:
		IfWinNotActive, 增加新的HotString
		    return 0
		; Otherwise, move the InputBox's insertion point to where the user will type the abbreviation.
		pianyi:=pianyi+3
		Send {Home}{Right %pianyi%}
		SetTimer, __在指定HotSting关键字的窗口时自动定位光标, Off
	return 1
}


;;------ 这个函数直接将HotString添加到调用它的脚本中,-------------
;;------ 并立即更新以便马上可以使用新添加的HotString ---------------
clip2hotstring(hs_default="`;",pianyi=0,var_hsType=1)
{
	var_re := clip2hs(A_ScriptFullPath,hs_default,pianyi,var_hsType)
	if (var_re = 0) return
	Reload
	Sleep 200 ; If successful, the reload will close this instance during the Sleep, so the line below will never be reached.
	MsgBox, 4,, The hotstring just added appears to be improperly formatted.  Would you like to open the script for editing? Note that the bad hotstring is at the bottom of the script.
	IfMsgBox, Yes, Edit
	return
}


clipwhat2hotstring()	; 可以选择添加的HotString的类别
{
	var_menu = 为当前脚本添加HotString的类型是什么?
	AddString(var_menu, "------------------------------", true)
	AddString(var_menu, "1. 可执行文件", true)
	AddString(var_menu, "2. 网址", true)
	AddString(var_menu, "3. 其他(手工输入分类)", true)
	AddString(var_menu, "`n0/Space/BackSpace`t退出", true)
	
	var_result := CSMenu(var_menu, 80)
	
	if var_result = 1
		clip2hotstring(";",1,2)
	else if var_result = 2
		clip2hotstring("/",1,3)
	else if var_result = 3
	{
		inputbox,var_user,输入分类,请输入你要HotString的分类,,260,120
		var_user = %var_user%`;
		clip2hotstring(var_user,strlen(var_user)-1)	
	}
	return
}

;;------ 会弹出一个对话框，让用户选择将HotString添加到哪个文件中 -----------------------
clip2hs_with_input(hs_default="`;",pianyi=0,var_hsType=1)
{
	var_menu = 添加HotString到哪个文件?
	AddString(var_menu, "------------------------------", true)
	AddString(var_menu, "1. 为QQ添加HotString", true)
	AddString(var_menu, "2. 为VC添加HotString", true)
	AddString(var_menu, "3. 为WEB添加HotString", true)
	AddString(var_menu, "4. 输入你要添加HotString的文件名", true)
	AddString(var_menu, "`n0/Space/BackSpace`t退出", true)
	
	var_result := CSMenu(var_menu, 80)
	
	if var_result = 1
		clip2hs(hs_qq,hs_default,pianyi,var_hsType)
	else if var_result = 2
		clip2hs(hs_vc,hs_default,pianyi,var_hsType)
	else if var_result = 3
		clip2hs(hs_web,hs_default,pianyi,var_hsType)
	else if var_result = 4
	{
		inputbox,var_user,选择HotString文件,请输入你要启动的Hotstring文件名称,,260,120
		clip2hs(hs_%var_user%,hs_default,pianyi,var_hsType)
	}
	return
}

; 先将不带路径的文件名FileName_补充完整FullFileName， 然后生成HotString保存到该文件
Clip2Word(FileName_, Title_)
{
	dir_wordfile := read_ini("var.ini","Path",FileName_, "error")
	if ( dir_wordfile =  "error" || dir_wordfile =  "" )
	{
		var_temp = 给定存储%FileName_% 的相对目录
		dir_wordfile := MyInput("指定文件保存的相对路径",var_temp,".\Word")
		
		;; 如果没有指定保存路径，则使用默认的路径 .\Word
		if dir_wordfile =
			dir_wordfile = .\Word
			
		;; 如果目录不存在，则创建之
		ifnotexist %dir_wordfile%
		{
			FileCreateDir, %dir_wordfile%
			if errorlevel
			{
				msgbox 创建目录 %dir_wordfile% 失败！未能生成 HotString ！
				return false
			}			
		}
			
		write_ini("var.ini","Path",FileName_, dir_wordfile)
	}
	
	FullFileName := dir_wordfile
	
	if ( StrLastWord(FullFileName, 1) <> "\")
	{
		FullFileName = %FullFileName%\
	}
	
	; 将相对WordingDir的路径转换绝对路径
	WordRelaDir := ∑相对工作路径转绝对路径(FullFileName)

	FullFileName = %WordRelaDir%%FileName_%
	if clip2hs(FullFileName,"`;",0,1, Title_)
	{
		return true
	}
	Return false
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 添加通用的HotString
add_general_word()
{
	FileName := filename_by_class("")
	if (FileName = "") 
		return false
	
	if Clip2Word(FileName, "#ifwinactive")
	{
		add_filename_to_include(FileName)		; 检查.\word\include.inc中是否已经包含了该FileName的文件, 无则包含之
		sleep 1500
		reload
	}
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 为当前活动窗口添加HotString
add_word_for_active_window()
{
	WinGetActiveTitle, Title
	WinGetClass, Class, A
	FileName := filename_by_class(Class)
	if (FileName = "") 
		return false
		
	Title_ := get_active_title(Title, Class)
	
	if Clip2Word(FileName,Title_)
	{
		add_filename_to_include(FileName)		; 检查.\word\include.inc中是否已经包含了该FileName的文件, 无则包含之
		sleep 1500
		reload
	}
	
}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 为当前窗口的类添加HotString
add_word_for_active_class()
{
	WinGetClass, Class, A
	FileName := filename_by_class(Class)
	if (FileName = "") 
		return false
		
	Title_ := get_active_classtitle(Class)
	if Clip2Word(FileName,Title_)
	{
		add_filename_to_include(FileName)		; 检查.\word\include.inc中是否已经包含了该FileName的文件, 无则包含之
		sleep 1500
		reload
	}
}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 为存在的窗口添加HotString
add_word_for_exist_window()
{
	WinGetActiveTitle, Title
	WinGetClass, Class, A
	FileName := filename_by_class(Class)
	if (FileName = "") 
		return false
		
	Title_ := get_exist_title(Title, Class)
	if Clip2Word(FileName,Title_)
	{
		add_filename_to_include(FileName)		; 检查.\word\include.inc中是否已经包含了该FileName的文件, 无则包含之
		sleep 1500
		reload
	}
}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 为存在窗口的类添加HotString
add_word_for_exist_class()
{
	WinGetClass, Class, A
	FileName := filename_by_class(Class)
	if (FileName = "") 
		return false
		
	Title_ := get_exist_classtitle(Class)
	if Clip2Word(FileName,Title_)
	{
		add_filename_to_include(FileName)		; 检查.\word\include.inc中是否已经包含了该FileName的文件, 无则包含之
		sleep 1500
		reload
	}
}

/**
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
insert & 0::
insert & g::
	add_general_word()
	return
	
insert & 1::
insert & a::
	add_word_for_active_window()
	return
	
insert & 2::
insert & c::
	add_word_for_active_class()
	return
	
insert & 3::
insert & x::
	add_word_for_exist_window()
	return
	
insert & 4::
insert & y::
	add_word_for_exist_class()
	return
	
	

	
insert & =::
	var_menu = 你要添加HotString到那里?
	AddString(var_menu, "------------------------------", true)
	AddString(var_menu, "0. 添加通用HotString", true)
	AddString(var_menu, "1. 为Active Window添加HotString", true)
	AddString(var_menu, "2. 为Active Class添加HotString", true)
	AddString(var_menu, "3. 为Exist Windows添加HotString", true)
	AddString(var_menu, "4. 为Exist Class添加HotString", true)
	AddString(var_menu, "`nSpace/BackSpace`t退出", true)
	
	var_result := CSMenu(var_menu, 80)
	if var_result = 0
		add_general_word()
	else if var_result = 1
		add_word_for_active_window()
	else if var_result = 2
		add_word_for_active_class()
	else if var_result = 3
		add_word_for_exist_window()
	else if var_result = 4
		add_word_for_exist_class()
	return
	
insert & -::		; 删除HotString
	var_menu = 你要添加HotString到那里?
	AddString(var_menu, "------------------------------", true)
	AddString(var_menu, "0. 删除通用HotString", true)
	AddString(var_menu, "1. 删除Active Window的HotString", true)
	AddString(var_menu, "2. 删除Active Class的HotString", true)
	AddString(var_menu, "3. 删除Exist Windows的HotString", true)
	AddString(var_menu, "4. 删除Exist Class的HotString", true)
	AddString(var_menu, "`nSpace/BackSpace`t退出", true)
	
	WinGetActiveTitle, Title
	WinGetClass, Class, A
	FileName := filename_by_class(Class)
	if (FileName = "") 
		return   
		

	IniRead FullFileName, var.ini, Path, word, .\word
	if ( StrFirstWord(FullFileName, 1) <> "\")
	{
		FullFileName = %FullFileName%\
	}

	FullFileName = %FullFileName%%FileName_%

	var_result := CSMenu(var_menu, 80)
	if var_result = 0
	{
		Title_ = #ifwinactive
	}
	else if var_result = 1
	{
		Title_ := get_active_title(Title, Class)
	}
	else if var_result = 2
	{
		Title_ := get_active_classtitle(Class)
	}
	else if var_result = 3
	{
		Title_ := get_exist_title(Title, Class)
	}
	else if var_result = 4
	{
		Title_ := get_exist_classtitle(Class)
	}
	else 
	{
		ToolTip7("你没有选择有效菜单选项！")
		return
	}
	
	var_Prompt = 请输入要删除的HotString的关键字!
	addstring(var_Prompt, "`n文件:", true)
	addstring(var_Prompt, FileName, false)
	addstring(var_prompt, "Title:", true)
	addstring(var_prompt, Title_, false)
	var_input := MyInputBox("删除HotString", var_Prompt, "", 0, 0, 0, 0)
	if var_input
	{
		delete_hkstring(FullFileName, Title_, var_input)
	}
	return
	

	*/
