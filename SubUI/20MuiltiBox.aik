/**
 *@file    20MuiltiBox.aik
 *@author  teshorse
 *@date    2012.03.27
 *@brief   实现简单的Modal模态多功能窗口
 *
 *- 目的：调用一个函数MuiltiBox()，就能弹出一个像InputBox一样Modal窗口，并且能否返回值
 *- 参数：control_参数能够动态指定生成不同类型的控件，从而达到多功能的目的
 *- 作用：1、可以使用Edit控件提示大文本（可替换MsgBox，由于Edit可以有滚动条，从而可以控制窗口大小）
 *-		  2、可以替代InputBox可输入多行文本，(Edit控件允许换行符，而不必将`n转换成```n)
 *-       3、可使用ListView控件从而变成选择窗口（选择某一行按确定键返回选中的条数）。
 *-		  4、可使用DropList控件选择。
 *- 衍生：根据不同的目的，MuiltiBox() 可衍生出一系列函数，本质上都是调用MuiltiBox(), 但更方便使用
 *-		  1、ArraySelectBox() 从指定的数组中选择一项返回。
 *-		  2、MsgTipBox() 仅提示大文本，替换MsgBox用。
 *-       3、MsgInputBox() 当要输入多行文本时，可替换InputBox
 */

; #include ./inc/xml/hotxstring.aik
; #include ./SubUI/26为飞扬个性输入添加短语.aik
;#include ..\..\
;#include .\inc\string.aik


;MuiltiBox( byref _OutputVar_, title_, Prompt_, text_, control_, ctrlopt_="" )

ArraySelectBox( title_, prompt_, Array_, field_="", width_="", height_="" )
{
	local outputvar, opt
	if field_ <>
		StrListAdd( opt, "lv:" . field_, "`n" )
	if width_ <>
		StrListAdd( opt, "w:" . width_, "`n" )
	if height_ <>
		StrListAdd( opt, "h:" . height_, "`n" )		

	return MuiltiBox( outputvar, title_, prompt_, Array_, "ArraySelect", opt )
}


MsgTipBox( title_, prompt_, Text_, width_="", height_="" )
{
	outputvar=

	if title_=
		title_ = MsgTipBox


	;; 需要自动计算
	if height_=
	{
		StartingPos := 0
		nFind := 0 
		loop 
		{
			StartingPos := InStr( Text_, "`n", false, StartingPos + 1 )
			if StartingPos
				nFind++
			else
				break
		}
		nFind ++

		height_ := 12.5 * ( nFind + 2 )
		if height_ < 50
			height_ := 50
		else if ( height_ > a_ScreenHeight * 3 / 4 )
			height_ := a_ScreenHeight * 3 / 4
	}


	if width_ =
	{
		width_ := height_ * 4 // 3
		if nFind > 0
		{
			var_width := strlen( Text_ ) / nFind * 10 + 50
			if ( var_width > width_ )
			{
				width_ := var_width
			}
		}
		if width_ < 300
			width_ := 300
		else if ( width_ > a_screenwidth * 3 / 4 )
			width_ := a_screenwidth * 3 / 4
	}		

	if width_ <>
		StrListAdd( opt, "w:" . width_, "`n" )

	if height_ <>
		StrListAdd( opt, "h:" . height_, "`n" )		
	
	return MuiltiBox( outputvar, title_, prompt_, Text_, "tip", opt )
}


MsgInputBox( Byref _output_, title_, prompt_, Text_, width_="", height_="" )
{

	if title_=
		title_ = MsgInputBox

	if height_ =
	{
		height_ := a_ScreenHeight // 3
		if height_ > 600
			height_ := 600
	}
	else
	{
		if height_ < 20
			height_ := 20
		else if ( height_ > a_ScreenHeight * 3 / 4 )
			height_ := a_ScreenHeight * 3 / 4
	}


	if width_ =
	{
		width_ := a_screenwidth // 2
		if width_ > 800
			width_ := 800
	}
	else
	{
		if width_ < 300
			width_ := 300
		else if ( width_ > a_screenwidth * 3 / 4 )
			width_ := a_screenwidth * 3 / 4
	}


	if width_ <>
		StrListAdd( opt, "w:" . width_, "`n" )


	if height_ <>
		StrListAdd( opt, "h:" . height_, "`n" )		
	
	return MuiltiBox( _output_, title_, prompt_, Text_, "Input", opt )
}


MuiltiBox( byref _OutputVar_, title_, Prompt_, text_, control_, ctrlopt_="" )
{
	Local var_title, var_wintitle, var_return, var_ctrl, bClose
	local var_width, var_height, var_row, var_lvfield, var_func
	local var_temp, Arr, var_ReadOnly

	var_title := title_
	var_wintitle = %var_title% ahk_class AutoHotkeyGUI
	ifwinexist %var_wintitle%
		msgbox 窗口已经存在 
	


	bClose := false			;; 是否已经关闭窗口
	var_return =
	_MuiltiBox_CtrlName =

	Arr := text_

	;;---分析选项----------------------------------------------------------------
	loop parse, ctrlopt_, `n
	{
		if a_loopfield =
			continue

		if instr( a_loopfield, "w:" ) = 1
			var_width := substr( a_loopfield, 3 )
		else if instr( a_loopfield, "h:" ) = 1
			var_height := substr( a_loopfield, 3 )
		else if instr( a_loopfield, "r:" ) = 1
			var_row := substr( a_loopfield, 3 )
		else if instr( a_loopfield, "lv:" ) = 1
			var_lvfield := substr( a_loopfield, 4 )
	}
	
	;;---检查变量----------------------------------------------------------------
	var_ctrl := control_
	if var_ctrl = input
	{
		var_ctrl = Edit
	}
	else if var_ctrl = tip
	{
		var_ctrl = Edit
		var_ReadOnly = ReadOnly
	}
	else if var_ctrl = ArraySelect
	{
		var_ctrl = ListView
	}

	if var_ctrl = Edit
	{
		_MuiltiBox_CtrlName := text_
	}
	else if var_ctrl = ListView
	{
		if var_width <= 0
			var_width = 300
		if var_height <= 0
			var_height = 150

		if var_lvfield =
			var_lvfield = item

		_MuiltiBox_CtrlName := var_lvfield
	}
	else if var_ctrl = listbox
	{
		if var_width <= 0
			var_width = 300
		if var_height <= 0
			var_height = 150

		StringReplace _MuiltiBox_CtrlName, text_, `n, |, all
	}
	else if var_ctrl = droplist
	{
		if var_width <= 0
			var_width = 300
		if var_height <= 0
			var_height = 150
		if var_row <= 0
			var_row = 5

		StringReplace _MuiltiBox_CtrlName, text_, `n, |, all
	}
	else
	{
		_MuiltiBox_CtrlName := text_
	}

	if var_width <>
		var_width = w%var_width%

	if var_height <>
		var_height = h%var_height%

	if var_row <>
		var_row = r%var_row%

	;;---显示窗口----------------------------------------------------------------
	Gui +20:OwnDialogs 
	Gui, 20:Add, Text, , %Prompt_%
	Gui, 20:Add, %var_ctrl%, %var_width% %var_height% %var_row% %var_ReadOnly% v_MuiltiBox_CtrlName g【多功能窗口_控件事件响应】, %_MuiltiBox_CtrlName%
	Gui, 20:Add, Button, xm y+15  w70 h28 default v_MuiltiBox_BtnOK  g【多功能窗口_确定按钮】, 确定(&Y)
	Gui, 20:Add, Button, x+20 w70 h28 g【多功能窗口_取消按钮】, 取消(&N)
	Gui, 20:-SysMenu
	Gui 20:+AlwaysOnTop
	
	if control_ = tip
	{
		;; 如果是tip类型的对话框，将焦点设置到确定按钮上
		GuiControl, Disable, _MuiltiBox_CtrlName
		GuiControl, 20:Focus, _MuiltiBox_BtnOK
	}

	Gui, 20:Show, , %var_title%

	;; 如果是ListView，现在显示数据
	if var_ctrl = ListView
	{
		;; 如果是从数据中选择，则text_是数组名称
		if control_ = ArraySelect
		{
			var_temp := %Arr%0
			loop %var_temp%
			{
				var_temp := %Arr%%a_index%
				LV_Add( "Icon1", var_temp )
			}
		}
		else ; if control_ = ListView
		{
			loop parse, text_, `n
			{
				LV_Add( "", a_loopfield )
			}
		}
		
	}	

	if control_ = tip
	{
		;; 如果是tip类型的对话框，将焦点设置到确定按钮上
		GuiControl, Focus, _MuiltiBox_BtnOK
	}

	;; 设置热键
	Hotkey, IfWinActive, %var_wintitle%
	Hotkey, ^Enter, 【多功能窗口_确定按钮】
	Hotkey, !F4, 	【多功能窗口_取消按钮】
	Hotkey, ESC, 	【多功能窗口_取消按钮】
	Hotkey, ^BackSpace, 	【多功能窗口_取消按钮】

;	listvars
;	pause 

	;; 等待窗口关闭
	loop 
	{
		Sleep 200
		
		if bClose
			break

		IfWinNotExist %var_wintitle%
			break
	}
    Return var_return



	;;---响应用户输入------------------------------------------------------------
	【多功能窗口_控件事件响应】:
		return	
		
	;;---按钮响应----------------------------------------------------------------
	【多功能窗口_确定按钮】:
		Gui, 20:submit, nohide
		
		if var_ctrl = ListView
		{
			var_return := LV_GetNext( 0 )
			if var_return > 0 
				LV_GetText( _OutputVar_, var_return )
		}
		else 
		{
			_OutputVar_ := _MuiltiBox_CtrlName
			var_return := 1
		}
		Gui 20:Destroy
		bClose := true
		return 
			
	【多功能窗口_取消按钮】:
	20:GuiClose:
		_MuiltiBox_CtrlName = 
		var_return := 0
		Gui 20:Destroy
		bClose := true
		return 
}

